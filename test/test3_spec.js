import { expect } from 'chai'
import 'babel-polyfill'

/*
Modify the contents of 'app/test3.js' and implement a function that will return an array of the Fibonacci sequence.

https://en.wikipedia.org/wiki/Fibonacci_number.

The function must take an number argument and generate that many numbers for the sequence.
*/

describe('Fibonacci', () => {
  it('should handle an empty argument', () => {
    let test3 = require('../app/test3').default
    expect(test3()).to.eql([]);
  })

  it('should handle an argument of 0', () => {
    let test3 = require('../app/test3').default
    expect(test3(0)).to.eql([]);
  })

  it('should handle an argument of 1', () => {
    let test3 = require('../app/test3').default
    expect(test3(1)).to.eql([0]);
  })

  it('should handle an argument of 2', () => {
    let test3 = require('../app/test3').default
    expect(test3(2)).to.eql([0, 1]);
  })

  it('should handle an argument of 99', () => {
    let test3 = require('../app/test3').default
    expect(test3(99)).to.eql([0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676220, 23416728348467684, 37889062373143900, 61305790721611580, 99194853094755490, 160500643816367070, 259695496911122560, 420196140727489660, 679891637638612200, 1100087778366101900, 1779979416004714000, 2880067194370816000, 4660046610375530000, 7540113804746346000, 12200160415121877000, 19740274219868226000, 31940434634990100000, 51680708854858330000, 83621143489848430000, 135301852344706760000]);
  })

  it('let\'s go crazy', () => {
    let test3 = require('../app/test3').default
    expect(test3(300)).to.eql([0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657,46368,75025,121393,196418,317811,514229,832040,1346269,2178309,3524578,5702887,9227465,14930352,24157817,39088169,63245986,102334155,165580141,267914296,433494437,701408733,1134903170,1836311903,2971215073,4807526976,7778742049,12586269025,20365011074,32951280099,53316291173,86267571272,139583862445,225851433717,365435296162,591286729879,956722026041,1548008755920,2504730781961,4052739537881,6557470319842,10610209857723,17167680177565,27777890035288,44945570212853,72723460248141,117669030460994,190392490709135,308061521170129,498454011879264,806515533049393,1304969544928657,2111485077978050,3416454622906707,5527939700884757,8944394323791464,14472334024676220,23416728348467684,37889062373143900,61305790721611580,99194853094755490,160500643816367070,259695496911122560,420196140727489660,679891637638612200,1100087778366101900,1779979416004714000,2880067194370816000,4660046610375530000,7540113804746346000,12200160415121877000,19740274219868226000,31940434634990100000,51680708854858330000,83621143489848430000,135301852344706760000,218922995834555200000,354224848179262000000,573147844013817200000,927372692193079200000,1.5005205362068963e+21,2.4278932283999755e+21,3.9284137646068717e+21,6.356306993006848e+21,1.028472075761372e+22,1.6641027750620568e+22,2.6925748508234288e+22,4.356677625885486e+22,7.049252476708914e+22,1.14059301025944e+23,1.8455182579303315e+23,2.9861112681897715e+23,4.831629526120103e+23,7.817740794309875e+23,1.2649370320429978e+24,2.0467111114739851e+24,3.3116481435169827e+24,5.358359254990968e+24,8.670007398507951e+24,1.402836665349892e+25,2.269837405200687e+25,3.6726740705505786e+25,5.942511475751265e+25,9.615185546301844e+25,1.555769702205311e+26,2.5172882568354952e+26,4.0730579590408064e+26,6.590346215876301e+26,1.0663404174917107e+27,1.7253750390793408e+27,2.791715456571052e+27,4.5170904956503927e+27,7.308805952221445e+27,1.1825896447871837e+28,1.9134702400093282e+28,3.096059884796512e+28,5.009530124805841e+28,8.105590009602353e+28,1.3115120134408193e+29,2.1220710144010545e+29,3.4335830278418734e+29,5.5556540422429276e+29,8.989237070084801e+29,1.454489111232773e+30,2.353412818241253e+30,3.807901929474026e+30,6.161314747715279e+30,9.969216677189305e+30,1.6130531424904583e+31,2.6099748102093888e+31,4.223027952699847e+31,6.8330027629092365e+31,1.1056030715609085e+32,1.788903347851832e+32,2.8945064194127406e+32,4.683409767264573e+32,7.577916186677313e+32,1.2261325953941887e+33,1.98392421406192e+33,3.2100568094561087e+33,5.193981023518028e+33,8.404037832974137e+33,1.3598018856492165e+34,2.20020566894663e+34,3.5600075545958467e+34,5.760213223542477e+34,9.320220778138323e+34,1.50804340016808e+35,2.4400654779819122e+35,3.9481088781499925e+35,6.388174356131905e+35,1.0336283234281898e+36,1.6724457590413803e+36,2.70607408246957e+36,4.37851984151095e+36,7.08459392398052e+36,1.146311376549147e+37,1.854770768947199e+37,3.001082145496346e+37,4.855852914443544e+37,7.85693505993989e+37,1.2712787974383434e+38,2.0569723034323324e+38,3.328251100870676e+38,5.385223404303009e+38,8.713474505173684e+38,1.409869790947669e+39,2.2812172414650375e+39,3.691087032412707e+39,5.972304273877745e+39,9.663391306290452e+39,1.5635695580168196e+40,2.529908688645865e+40,4.0934782466626846e+40,6.623386935308549e+40,1.0716865181971233e+41,1.7340252117279783e+41,2.8057117299251016e+41,4.53973694165308e+41,7.34544867157818e+41,1.188518561323126e+42,1.923063428480944e+42,3.11158198980407e+42,5.034645418285014e+42,8.146227408089083e+42,1.3180872826374099e+43,2.1327100234463182e+43,3.450797306083728e+43,5.583507329530046e+43,9.034304635613775e+43,1.4617811965143821e+44,2.3652116600757594e+44,3.826992856590142e+44,6.192204516665901e+44,1.0019197373256042e+45,1.6211401889921942e+45,2.6230599263177984e+45,4.2442001153099927e+45,6.86726004162779e+45,1.1111460156937784e+46,1.7978720198565574e+46,2.9090180355503355e+46,4.706890055406893e+46,7.615908090957229e+46,1.2322798146364122e+47,1.993870623732135e+47,3.2261504383685474e+47,5.2200210621006825e+47,8.44617150046923e+47,1.3666192562569911e+48,2.2112364063039142e+48,3.577855662560905e+48,5.7890920688648195e+48,9.366947731425724e+48,1.5156039800290544e+49,2.452298753171627e+49,3.967902733200681e+49,6.420201486372308e+49,1.0388104219572989e+50,1.6808305705945297e+50,2.7196409925518287e+50,4.400471563146358e+50,7.120112555698187e+50,1.1520584118844544e+51,1.864069667454273e+51,3.016128079338727e+51,4.880197746793e+51,7.896325826131728e+51,1.2776523572924728e+52,2.0672849399056455e+52,3.344937297198118e+52,5.412222237103764e+52,8.757159534301882e+52,1.4169381771405647e+53,2.2926541305707528e+53,3.7095923077113174e+53,6.002246438282071e+53,9.711838745993388e+53,1.571408518427546e+54,2.5425923930268848e+54,4.114000911454431e+54,6.656593304481316e+54,1.0770594215935747e+55,1.7427187520417062e+55,2.819778173635281e+55,4.562496925676987e+55,7.382275099312268e+55,1.1944772024989255e+56,1.9327047124301523e+56,3.1271819149290778e+56,5.05988662735923e+56,8.187068542288308e+56,1.3246955169647538e+57,2.1434023711935847e+57,3.4680978881583385e+57,5.611500259351923e+57,9.07959814751026e+57,1.4691098406862182e+58,2.3770696554372443e+58,3.846179496123462e+58,6.223249151560707e+58,1.0069428647684168e+59,1.6292677799244873e+59,2.636210644692904e+59,4.265478424617391e+59,6.901689069310295e+59,1.1167167493927686e+60,1.806885656323798e+60,2.923602405716567e+60,4.7304880620403654e+60,7.654090467756932e+60,1.2384578529797298e+61,2.003866899755423e+61,3.242324752735153e+61,5.246191652490576e+61,8.488516405225729e+61,1.3734708057716305e+62])
  })
});
